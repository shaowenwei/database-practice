CREATE VIEW VIEW_USER_INFORMATION
(USER_ID, FIRST_NAME, LAST_NAME, YEAR_OF_BIRTH, MONTH_OF_BIRTH, DAY_OF_BIRTH, GENDER,
CURRENT_CITY, CURRENT_STATE, CURRENT_COUNTRY, 
HOMETOWN_CITY, HOMETOWN_STATE, HOMETOWN_COUNTRY,
INSTITUTION_NAME, PROGRAM_YEAR, PROGRAM_CONCENTRATION, PROGRAM_DEGREE) 
AS SELECT 
U.USER_ID, U.FIRST_NAME, U.LAST_NAME, U.YEAR_OF_BIRTH, U.MONTH_OF_BIRTH, U.DAY_OF_BIRTH, U.GENDER,
C1.CITY_NAME, C1.STATE_NAME, C1.COUNTRY_NAME, 
C2.CITY_NAME, C2.STATE_NAME, C2.COUNTRY_NAME,
P.INSTITUTION, E.PROGRAM_YEAR, P.CONCENTRATION, P.DEGREE
FROM 
USERS U, CITIES C1, CITIES C2, 
USER_CURRENT_CITY CU, USER_HOMETOWN_CITY HO,
PROGRAMS P, EDUCATION E
WHERE 
U.USER_ID=CU.USER_ID
AND U.USER_ID=HO.USER_ID
AND (IF E.USER IS NOT NULL THEN E.USER_ID=U.USER_ID)
AND CU.CURRENT_CITY_ID=C1.CITY_ID
AND HO.HOMETOWN_CITY_ID=C2.CITY_ID
AND (IF E.USER IS NOT NULL THEN E.PROGRAM_ID=P.PROGRAM_ID);

CREATE VIEW VIEW_ARE_FRIENDS(USER1_ID, USER2_ID)
AS SELECT USER1_ID, USER2_ID
FROM FRIENDS;

CREATE VIEW VIEW_PHOTO_INFORMATION
(ALBUM_ID, OWNER_ID, COVER_PHOTO_ID, ALBUM_NAME, ALBUM_CREATED_TIME, ALBUM_MODIFIED_TIME, ALBUM_LINK, ALBUM_VISIBILITY,
PHOTO_ID, PHOTO_CAPTION, PHOTO_CREATED_TIME, PHOTO_MODIFIED_TIME, PHOTO_LINK)
AS SELECT 
P.ALBUM_ID, A.ALBUM_OWNER_ID, A.COVER_PHOTO_ID, A.ALBUM_NAME, A.ALBUM_CREATED_TIME, A.ALBUM_MODIFIED_TIME, A.ALBUM_LINK, A.ALBUM_VISIBILITY,
P.PHOTO_ID, P.PHOTO_CAPTION, P.PHOTO_CREATED_TIME, P.PHOTO_MODIFIED_TIME, P.PHOTO_LINK
FROM ALBUMS A, PHOTOS P
WHERE
P.ALBUM_ID=A.ALBUM_ID;

CREATE VIEW VIEW_TAG_INFORMATION(PHOTO_ID, TAG_SUBJECT_ID, TAG_CREATED_TIME, TAG_X_COORDINATE, TAG_Y_COORDINATE)
AS SELECT TAG_PHOTO_ID, TAG_SUBJECT_ID, TAG_CREATED_TIME, TAG_X, TAG_Y
FROM TAGS;

CREATE VIEW VIEW_EVENT_INFORMATION(EVENT_ID, EVENT_CREATOR_ID, EVENT_NAME, EVENT_TAGLINE, EVENT_DESCRIPTION, EVENT_HOST, EVENT_TYPE, EVENT_SUBTYPE, EVENT_LOCATION, 
EVENT_CITY, EVENT_STATE, EVENT_COUNTRY, EVENT_START_TIME, EVENT_END_TIME)
AS SELECT E.EVENT_ID, E.EVENT_CREATOR_ID, E.EVENT_NAME, E.EVENT_TAGLINE, E.EVENT_DESCRIPTION, E.EVENT_HOST, E.EVENT_TYPE, E.EVENT_SUBTYPE, E.EVENT_LOCATION,
C.CITY_NAME, C.STATE_NAME, C.COUNTRY_NAME, E.EVENT_START_TIME, E.EVENT_END_TIME
FROM USER_EVENTS E, CITIES C
WHERE E.EVENT_CITY_ID=C.CITY_ID;

